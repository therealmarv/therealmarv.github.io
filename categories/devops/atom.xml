<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Devops | therealmarv]]></title>
  <link href="https://therealmarv.com/categories/devops/atom.xml" rel="self"/>
  <link href="https://therealmarv.com/"/>
  <updated>2016-06-10T12:15:00+02:00</updated>
  <id>https://therealmarv.com/</id>
  <author>
    <name><![CDATA[Marvin Reimer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ansible Vault File Handling]]></title>
    <link href="https://therealmarv.com/ansible-vault-file-handling/"/>
    <updated>2015-09-03T18:38:54+02:00</updated>
    <id>https://therealmarv.com/ansible-vault-file-handling</id>
    <content type="html"><![CDATA[<p>If you are familiar with DevOps you hopefully know this advice:</p>

<p><strong>Never ever</strong> store secret keys in your source code repository!</p>

<p>If someone gains access to your repository then they will also gain access to your whole infrastructure!</p>

<!-- more -->


<p>But when you setup a server with Ansible you maybe need to copy a private key or SSL/TLS certificates to your servers at some time. Copying them manually was not a real option for me so I was happy when I found <a href="http://docs.ansible.com/ansible/playbooks_vault.html">Ansible Vault</a> which seemed at first like a simple and secure solution for encrypting files for storing them in a repository. However I was very disappointed when I tried it out because it <strong>only</strong> works with variables and not with files in a transparent way. I really wonder why?!</p>

<p>So when you copy a file you maybe have something like this in your playfile (danger! this is the wrong way to do it):</p>

<p>```yaml
&ndash; name: copy deployment private key
  copy:</p>

<pre><code>src: deployment_id_rsa
dest: "/home/marvin/.ssh/id_rsa"
owner: marvin
group: marvin
mode: 0600
</code></pre>

<p>```</p>

<p>So I thought I can simply run <code>ansible-vault encrypt deployment_id_rsa</code> and do the same copy command as above. But this will not work because Ansible Vault is only working for variables.</p>

<p>The solution is simple as long as you do not have binary secret data: You have to convert the secret private key file to a variable file which you need to import and also keep hidden in the (verbose <code>-vvvv</code>) logs!</p>

<h3>How to modify the copy command:</h3>

<p>Copy&amp;Paste your key into a variable file in your roles directory like e.g.  <code>roles/yourrole/vars/secret_key.yml</code>. It should look like this, look at the syntax and the usage of <code>|</code> in the YAML:</p>

<h2>```yaml</h2>

<p>private_key_content: |
  &mdash;&mdash;-BEGIN RSA PRIVATE KEY&mdash;&mdash;&ndash;
  MIIJKAIBAAKCAgEA25qk2rd29s4Z6vTBs1gHznsNS9e3J/C87H5pX0zm0UJtyUfm
  +3hrX5Ag+U368OFO7XeR09iuWhae5FYe5GGFz7CRcIo29hLroXXQgh5cFfrmOdJw
  GCvASbVJhIES0Q/XifS2KNU72fTge7teCsqXo9RgNzNqGK7pgXutPQ8e9NF3NfZj
  XKJhzThde75Ih2Or36R7JKfNfq+jv9t8ulbSrlDltCXafo5+k/RdYtG8QhGKHTHW
  &hellip;
  &hellip;
  &hellip;
  &mdash;&mdash;-END RSA PRIVATE KEY&mdash;&mdash;-<br/>
```</p>

<p>Now encrypt that yaml with Ansible Vault:</p>

<p><code>bash
ansible-vault encrypt secret_key.yml
</code></p>

<p>At this point it is safe to include it also into your git repository because it is encrypted.</p>

<p>This variable file now needs to be imported in a playbook without logging <code>no_log: true</code> and copied to the right destination. The <code>copy</code> command can use a <code>content</code> attribute for reading from a string. So we will use the variable here.</p>

<p>
```yaml
&ndash; name: import secret variable file
  include_vars: &ldquo;secret_key.yml&rdquo;
  no_log: true</p>

<ul>
<li>name: copy deployment private key
copy:
  content: &ldquo;{{private_key_content}}&rdquo;
  dest: &ldquo;/home/marvin/.ssh/id_rsa&rdquo;
  owner: marvin
  group: marvin
  mode: 0600
no_log: true
```
</li>
</ul>


<p>This way you can copy encrypted non-binary files contents without logging them.</p>

<p>On provisioning you only need to add <code>--ask-vault-pass</code> to the command. Example:
<code>bash
ansible-playbook site.yml -i production_hosts -l production -vvvv --ask-vault-pass
</code></p>
]]></content>
  </entry>
  
</feed>
